1. Instal npm instal untuk menginstal route, axios, dll
2. pada source tambahkan folder pages, components, dan types
3. pada folder pages tambahakn page Browser.tsx
4. kemudian ketik ENDF +enter agar export default muncul kemudia rubah menjadi
    export default function Browse(){
    return();
    }
5. Kemdian buka template html dan copy bagian body lalu pergi ke tools html to jsx, pada browse sebelum paste, pakai fragment dulu
    <> paste disini </>

6. Copy assets pada template dan paste di public, kmudian ganti pemanggilan assets pada browse menjadi /assets/images semua
7. Copy output.css paste di index.css pada react
8. Instal npm instal react-router-dom, kemudian gunakan App.txs sebagai routering
    import { BrowserRouter as Router, Route, Routes } from "react-router-dom";
    import Browse from './pages/Browser';
    function App() {
    return (
        <Router>
        <Routes>
            <Route path="/" element={<Browse />} />
        </Routes>
        </Router>
    )
    }

    export default App
9. open folder public di filemanajer tambahkan folder assets dan masukan folder images ke dalam assets
10. INstal Swiper kemudian import dalam browse, pada class swiper ubah menjadi pangiil swiper atur class masing masingnya dan 
    buat SwiperSilde per item
    <Swiper 
        className="w-full mt-3" 
        direction='horizontal' 
        spaceBetween={16} 
        slidesPerView="auto" 
        slidesOffsetBefore={20} 
        slidesOffsetAfter={20}>
        <SwiperSlide className="!w-fit pb-[30px]">
                                <a href="category.html" className="card">
                                    <div className="flex flex-col w-fit min-w-[90px] rounded-[31px] p-[10px] pb-5 gap-[10px] text-center bg-white shadow-[0_12px_30px_0_#D6D6D680] transition-all duration-300 hover:shadow-[0_10px_20px_0_#FF4C1C80] hover:bg-[#FF4C1C] hover:text-white">
                                        <div className="flex shrink-0 w-[70px] h-[70px] rounded-full bg-white">
                                            <img
                                                src="/assets/images/icons/bakery.png"
                                                className="object-cover w-full h-full object-top"
                                                alt="icon"
                                            />
                                        </div>
                                        <h3 className="font-semibold text-sm leading-[21px]">Bakery</h3>
                                    </div>
                                </a>
                            </SwiperSlide>
11. BUat Componentn untuk CategoryCard dan FeaturedRecipeCard dari data browse agar
    tidak memakan banyak kode

12. BUat wrapper pada section category, hal ini bertujuan agar pada page browse tidak lebih dari 1 API bahkan tanpa API,
    karna akan memudahkan dalam pengambilan data backend juga agar lebih rapih

13. pada folder src, buat CategoryWrapper, isi CategoryWrapper dengan section Category, kemudian panggil di browse

14. INstal axios, kemudian pakai useState dan useEffect untuk mengambil data API pada wrapper

    const [categories, setCategories] = useState<Category[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<String | null>(null);

    useEffect(() => {
        axios.get('')
        .then(response => {
            setCategories(response.data.data);
            setLoading(false);
        })
        .catch(error => {
            setError(error);
            setLoading(false);
        })
    },[]);

    if (loading) {
        return <p>loading...</p>;
    }

    if (error) {
        return <p>Error loading data: {error}</p>
    }

15. Pada bagian types, tambahakan file type.tsx sebagai interface untuk mengatur type data dan menampung data 
    hal ini biasa dinamakan interface. export artinya data bisa digunakan di berbagai page dengan langsung, tanap export artinya 
    hnya digunakan dalam pemanggilan pada interface saja

16. Gunaka maping untuk Swipe category agar loop sesuai category, dan beri key={}
    <Swiper
        className="w-full mt-3"
        direction='horizontal'
        spaceBetween={16}
        slidesPerView="auto"
        slidesOffsetBefore={20}
        slidesOffsetAfter={20}>
        {/* maping data category */}
        {categories.map((categories) => (
            <SwiperSlide key={categories.id} className="!w-fit pb-[30px]">
                <CategoryCard category={categories} />
            </SwiperSlide>
        ))}
    </Swiper>

17. namun sebelum itu pada CategoryCard buat props untuk mengmabil aturan data type.tsx
    interface CategoryCardProps {
    category: Category
    }

18. Setelah itu implementasikan pada CategoryCard
    export default function CategoryCard({ category }: CategoryCardProps) => diwakili variabel category
    selanjutnya tinggal dilakukan pemanggilan contoh {category.name}

19. untuk icon buat dulu baseURL agar nanti bisa ditambahkan nama icon
    const baseURL = "http://localhost/recipesApp/public/storage/"

20. kemudian pada src gunakan backtick ` 
    src={`${baseURL}/${category.icon}`}

21. Lakukan juga pada section Recipe Made By

22. agar tdak impord swiper.css berulang, letakan swiper css di main.txs saja

===== Search Fitur =====
23. Buat route nya terlebih dahulu , kemudian baru buat pagenya di folder pages dengan nama SearchDetails

24. Copas dari template yang ada kemudian tambahakan variabel yang dibutuhkan pada page browse

     const [searchQuery, setSearchQuery] = useState('');
    // variable navigasi otomatis
    const navigate = useNavigate();

    // Fungsi untuk menangani perubahan input dari user pada kotak pencarian
    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setSearchQuery(event.target.value)
    }

    const handleSearch = () => {
        if (searchQuery.length > 3) {
            navigate(`/search?query=${searchQuery}`)
        }
    }

25. kemudian pada browse page, modifikasi navigasi search

26. ubah form menjadi div, kemudian beri attribut value, onChange masukan sesuai variable yang sudah dibuat
    pada button beri onClik handleSearch